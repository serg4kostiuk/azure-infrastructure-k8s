apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  annotations:
    deployment.kubernetes.io/revision: "1"
  creationTimestamp: 2018-10-29T17:26:20Z
  generation: 1
  labels:
    app: kube-prometheus-grafana
    chart: grafana-0.0.37
    heritage: Tiller
    release: kube-prometheus
  name: kube-prometheus-grafana
  namespace: monitoring
  resourceVersion: "4695"
  selfLink: /apis/extensions/v1beta1/namespaces/monitoring/deployments/kube-prometheus-grafana
  uid: bff5301e-db9f-11e8-868c-b26230958cf1
spec:
  replicas: 1
  selector:
    matchLabels:
      app: kube-prometheus-grafana
      release: kube-prometheus
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      creationTimestamp: null
      labels:
        app: kube-prometheus-grafana
        release: kube-prometheus
    spec:
      containers:
      - env:
        - name: GF_AUTH_BASIC_ENABLED
          value: "true"
        - name: GF_AUTH_ANONYMOUS_ENABLED
          value: "true"
        - name: GF_SECURITY_ADMIN_USER
          valueFrom:
            secretKeyRef:
              key: user
              name: kube-prometheus-grafana
        - name: GF_SECURITY_ADMIN_PASSWORD
          valueFrom:
            secretKeyRef:
              key: password
              name: kube-prometheus-grafana
        image: grafana/grafana:5.0.0
        imagePullPolicy: IfNotPresent
        name: grafana
        ports:
        - containerPort: 3000
          name: web
          protocol: TCP
        readinessProbe:
          failureThreshold: 10
          httpGet:
            path: /api/health
            port: 3000
            scheme: HTTP
          periodSeconds: 1
          successThreshold: 1
          timeoutSeconds: 1
        resources: {}
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        volumeMounts:
        - mountPath: /var/lib/grafana
          name: grafana-storage
      - args:
        - --watch-dir=/var/grafana-dashboards
        - --grafana-url=http://127.0.0.1:3000
        env:
        - name: GRAFANA_USER
          valueFrom:
            secretKeyRef:
              key: user
              name: kube-prometheus-grafana
        - name: GRAFANA_PASSWORD
          valueFrom:
            secretKeyRef:
              key: password
              name: kube-prometheus-grafana
        image: quay.io/coreos/grafana-watcher:v0.0.8
        imagePullPolicy: IfNotPresent
        name: grafana-watcher
        resources: {}
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        volumeMounts:
        - mountPath: /var/grafana-dashboards
          name: grafana-dashboards
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 30
      volumes:
      - emptyDir: {}
        name: grafana-storage
      - configMap:
          defaultMode: 420
          name: kube-prometheus-grafana
        name: grafana-dashboards
status:
  availableReplicas: 1
  conditions:
  - lastTransitionTime: 2018-10-29T17:26:20Z
    lastUpdateTime: 2018-10-29T17:26:20Z
    message: Deployment has minimum availability.
    reason: MinimumReplicasAvailable
    status: "True"
    type: Available
  observedGeneration: 1
  readyReplicas: 1
  replicas: 1
  updatedReplicas: 1
